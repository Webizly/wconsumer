<?php
/**
 * @file
 * Install, update, and uninstall functions for the wconsumer module.
 *
 * @package wconsumer
 * @subpackage schema
 */
function wconsumer_schema() {
  $schema = array();

  $schema['wc_service'] = array(
    'description' => 'Stores Services',

    'fields' => array(
      'service_id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Service ID'
      ),
      'enabled' => array(
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 1,
      ),
      'service' => array(
        'type' => 'varchar',
        'length' => 200,
        'not null' => TRUE,
        'default' => '',
        'description' => 'The name of service'
      ),
      'credentials' => array(
        'type' => 'varchar',
        'length' => 4000,
        'default' => NULL,
        'description' => 'The serialized credentials object for this service'
      ),

    ),
    'primary key' => array('service_id'),
    'unique keys' => array(
      'service' => array('service')
    ),
  );

  $schema['wc_user'] = array(
    'description' => 'Stores a User\'s Service Credentials',
    'fields' => array(
      'cred_id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Credential id'
      ),
      'service' => array(
        'type' => 'varchar',
        'length' => 200,
        'not null' => TRUE,
        'description' => 'Foreign Key: Service Name'
      ),
      'user_id' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => 'Foreign Key: User ID'
      ),
      'credentials' => array(
        'type' => 'varchar',
        'length' => 4000,
        'default' => NULL,
        'description' => 'The serialized credentials object for this user'
      )
    ),
    'foreign keys' => array(
      'users' => array(
        'table' => 'users',
        'columns' => array(
          'user_id' => 'user_id'
        )
      ),
      'service' => array(
        'table' => 'wc_service_registry',
        'columns' => array(
          'service' => 'service'
        )
      )
    ),
    'primary key' => array('cred_id'),
    'indexes' => array(
      'service' => array('service'),
      'user_id' => array('user_id'),
    )
  );
  return $schema;
}

/**
 * @file
 * Install for a basic entity - need to create the base table for our entity.
 * This table can have as many columns as you need to keep track of
 * entity-specific data that will not be added via attached fields.
 * The minimum information for the entity to work is an id and an entity name.
 */

/**
 * Implements hook_schema().
 */
function entity_example_schema() {
  $schema = array();

  // The name of the table can be any name we choose. However, namespacing the
  // table with the module name is best practice.
  $schema['entity_example_basic'] = array(
    'description' => 'The base table for our basic entity.',
      'fields' => array(
        'basic_id' => array(
          'description' => 'Primary key of the basic entity.',
          'type' => 'serial',
          'unsigned' => TRUE,
          'not null' => TRUE,
        ),
        // If we allow multiple bundles, then the schema must handle that;
        // We'll put it in the 'bundle_type' field to avoid confusion with the
        // entity type.
        'bundle_type' => array(
          'description' => 'The bundle type',
          'type' => 'text',
          'size' => 'medium',
          'not null' => TRUE
        ),
        // Additional properties are just things that are common to all
        // entities and don't require field storage.
        'item_description' => array(
          'description' => 'A description of the item',
          'type' => 'varchar',
          'length' => 255,
          'not null' => TRUE,
          'default' => '',
        ),
        'created' => array(
          'description' => 'The Unix timestamp of the entity creation time.',
          'type' => 'int',
          'not null' => TRUE,
          'default' => 0,
        ),
      ),
    'primary key' => array('basic_id'),
  );

  return $schema;
}

/**
 * Implements hook_enable()
 */
function wconsumer_enable() {
  drupal_set_message(t('Welcome to Web Consumer Manager! For information on how to build out service modules, check out <a href="https://github.com/wconsumer/wconsumer/wiki">our wiki</a>.'));
}
