<?php
use Drupal\wconsumer\Wconsumer;

/**
 * Implements hook_menu().
 */
function wconsumer_ui_menu() {
  // Parent wconsumer module is not loaded if it's being updated by drupal/update.php. So
  // we have to load autoloader here.
  if (!class_exists('Wconsumer')) {
    require_once(__DIR__.'/../vendor/autoload.php');
  }

  $services = Wconsumer::instance()->services;

  $items['admin/config/services/wconsumer_ui'] = array(
    'title' => 'Web Consumer Manager',
    'description' => 'Manage Web Services',
    'type' => MENU_NORMAL_ITEM,
    'menu_name' => 'management',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('_wconsumer_ui_form'),
    'file' => 'wconsumer_ui_form.inc',
    'file path' => drupal_get_path('module', 'wconsumer_ui'),
    'access callback' => 'user_access',
    'access arguments' => array(
      'manage web consumer'
    )
  );

  $items['admin/config/services/wconsumer_ui/default'] = array(
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'title' => 'Settings Management',
    'weight' => 1
  );

  if (count($services) > 0) {
    $i = 1;
    foreach ($services as $name => $service) {
      $i++;
      $items['admin/config/services/wconsumer_ui/' . $name] = array(
        'title' => ucwords($name),
        'type' => MENU_LOCAL_TASK,
        'description' => 'Manage Service',

        // Location of the Form
        'file' => 'wconsumer_ui_form.inc',
        'file path' => drupal_get_path('module', 'wconsumer_ui'),

        // Arguments to the Function
        'page arguments' => array('_wconsumer_ui_form', $name),
        'page callback' => 'drupal_get_form',

        // Permissions
        'access callback' => 'user_access',
        'access arguments' => array('manage web ' . $name),
        'weight' => $i
      );
    }

    // Here you can redirect user to start service auth for him
    $items['wconsumer/auth/%'] = array(
      'title' => 'Authenticate user with web service',
      'type' => MENU_CALLBACK,

      'file path' => drupal_get_path('module', 'wconsumer_ui'),
      'file' => 'wconsumer_frontend_form.inc',

      'page callback' => '_wconsumer_frontend_auth',
      'page arguments' => array(2),

      'access callback' => TRUE,
    );
    $items['wconsumer/revoke/%'] = array(
      'title' => 'Revoke web service auth',
      'type' => MENU_CALLBACK,

      'file path' => drupal_get_path('module', 'wconsumer_ui'),
      'file' => 'wconsumer_frontend_form.inc',

      'page callback' => '_wconsumer_frontend_revoke',
      'page arguments' => array(2),

      'access callback' => TRUE,
    );

    // Add the callback page
    $items['wconsumer/callback/%'] = array(
      'title' => 'Web service return callback',
      'type' => MENU_LOCAL_TASK,
      'description' => 'Manage Service',

      // Location of the Form
      'file' => 'wconsumer_ui_form.inc',
      'file path' => drupal_get_path('module', 'wconsumer_ui'),

      // Arguments to the Function
      'page arguments' => array(2),
      'page callback' => '_wconsumer_ui_callback',

      'access callback' => TRUE,

      'weight' => $i
    );
  }

  return $items;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function wconsumer_ui_form_user_profile_form_alter(&$form, $form_state) {
  $form['web_services'] = _wconsumer_ui_user_profile_form();
  return $form;
}

function _wconsumer_ui_user_profile_form() {
  $form = array(
    '#type' => 'fieldset',
    '#title' => t('Web Services'),
    '#collapsible' => TRUE,
    '#weight' => 6,
  );

  $form['vtabs'] = array(
    '#type' => 'vertical_tabs',
  );

  $services = Wconsumer::instance()->services;
  $shownServicesCount = 0;
  foreach ($services as $service) {
    /** @var \Drupal\wconsumer\Service\Base $service */

    if (!$service->isActive()) {
      continue;
    }

    $serviceName = $service->getName();

    $form[$serviceName] = array(
      '#type' => 'fieldset',
      '#title' => t(ucwords($serviceName)),
      '#tree' => TRUE,
      '#access' => $service->canAccess(),
      '#group'  => 'vtabs',
    );

    $caption = NULL;
    $url = NULL;
    if (!$service->getCredentials()) {
      $caption = 'Authenticate';
      $url = 'wconsumer/auth/'.$serviceName;
    }
    else {
      $caption = 'Revoke';
      $url = 'wconsumer/revoke/'.$serviceName;
    }

    $form[$serviceName]['action'] = array(
      '#markup' => l(
        $caption.' '.ucfirst($serviceName),
        $url,
        array(
          'attributes' => array('class' => 'button'),
          'query'      => drupal_get_destination(),
        )
      ),
    );

    $shownServicesCount++;
  }

  if ($shownServicesCount == 0) {
    $form['no-active-services'] = array('#markup' => t('There are no web services active to manage.'));
  }

  return $form;
}


/**
 * Persist the url which we want to back to in session
 */
function _wconsumer_ui_save_return_url() {
  if (!empty($_GET['destination'])) {
    drupal_set_message($_GET['destination'], 'wconsumer_back_to_url');
  }

  unset($_GET['destination']);
}

function _wconsumer_ui_goto() {
  if ($back_to_urls = drupal_get_messages('wconsumer_back_to_url')) {
    $_GET['destination'] = end($back_to_urls['wconsumer_back_to_url']);
  }

  drupal_goto();
}